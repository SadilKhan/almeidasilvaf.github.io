---
title: "Where can I publish a paper describing my Bioconductor package?"
excerpt: "Check out where Bioc developers have published their papers"
date: 2022-01-02
author: "Fabrício Almeida-Silva"
draft: false
# layout options: single, single-sidebar
layout: single
categories:
- bioinformatics
- reproducible research
- bioconductor
- scientific writing
- rstats
---

## Motivation

When I developed [BioNERO](https://bioconductor.org/packages/release/bioc/html/BioNERO.html), my first R/Bioconductor package, I didn't know to which journals I could submit the paper describing it. Since then, I've seen many other R developers that have faced the same issue. To help solve this problem, here I will guide you on how to do some web scraping to find out the main journals where Bioc developers publish papers describing their packages.

## Extracting citation information from packages' landing pages

All Bioconductor packages have a landing page where there is a citation field. This field is created from a CITATION file inside the package directory or automatically from information in the DESCRIPTION file. First, let's write two helper functions:

- `get_bioc_citation`, a function that scrapes packages' landing pages to get citation information.
- `create_citation_table`, a function that creates a tidy data frame containing package name, journal where the paper is published (if that is the case), and year of publication.
- `process_titles`, a function to process journal titles and remove inconsistencies across packages.

```{r functions}
#' Extract citation from Bioconductor landing page
#'
#' @param package Character of package name.
#'
#' @return Character of citation text.
#' @noRd
#' @importFrom rvest html_elements html_text2
#' @importFrom httr GET content
get_bioc_citation <- function(package = NULL) {
    url <- paste0("https://bioconductor.org/packages/release/bioc/citations/",
                  package, "/citation.html")
    request <- httr::GET(url)
    parsed_page <- httr::content(request, as = "parsed", encoding = "UTF-8")
    if("xml_node" %in% class(parsed_page)) {
        citations <- rvest::html_elements(parsed_page, "p")
        citations <- rvest::html_text2(citations)
    } else {
        citations <- NA
    }
    return(citations)
}

#' Create a table of citations for each Bioc package
#'
#' @param packages Character vector of package names.
#'
#' @return A data frame with the following variables:
#' \describe{
#'   \item{Package}{Chaarcter of package name.}
#'   \item{Journal}{Character of journal name.}
#'   \item{Year}{Numeric of journal year.}
#'   \item{Citation}{Character of full citation.}
#' }
#' @noRd
#' @importFrom stringr str_detect str_extract
create_citation_table <- function(packages = NULL) {
    table <- Reduce(rbind, lapply(packages, function(x) {
        df <- data.frame(Citation = get_bioc_citation(x))
        df$Package <- x
        return(df)
    }))
    
    year <- "([0-9]{4})"
    table$Year <- as.numeric(stringr::str_extract(table$Citation, year))
    journal <- gsub('.*” ', '', table$Citation)
    journal <- gsub("\\*{3} ", "", journal)
    journal <- gsub("(,|\\.).*", "", journal)
    table$Journal <- journal
    idx <- which(stringr::str_detect(table$Citation, "github|R package version"))
    table$Journal[idx] <- NA
    table <- table[, c("Package", "Journal", "Year", "Citation")]
    table <- table[!is.na(table$Journal), ]
    return(table)
}

#' Process journal titles
#'
#' @param citation_table Data frame created with \code{create_citation_table}.
#'
#' @return The same data frame as in \strong{citation_table}, but with
#' processed titles in the variable 'Journal'.
#' @noRd
#' @importFrom dplyr mutate filter
#' @importFrom stringr str_to_title str_replace_all str_detect str_trim
process_titles <- function(citation_table = NULL) {
    pcit <- dplyr::mutate(citation_table, 
                          Journal = stringr::str_to_title(Journal))
    
    sagmb <- "Statistical Applications In Genetics And Molecular Biology"
    pnas <- "Proceedings Of The National Academy Of Sciences Of The United States Of America"
    ijms <- "International Journal Of Molecular Sciences"
    cmpbiomed <- "Computer Methods And Programs In Biomedicine"
    jcompbio <- "Journal Of Computational Biology"
    pcit <- mutate(pcit, Journal = stringr::str_replace_all(
        Journal, c("^Nat$" = "Nature",
                   "Res$" = "Research",
                   " \\(Oxford.*" = "",
                   "Bmc" = "BMC",
                   "Plos" = "PLoS",
                   "Rna" = "RNA",
                   "^Nucl$" = "Nucleic Acids Research",
                   "^Genome Bio$" = "Genome Biology",
                   "^Genome Biol$" = "Genome Biology",
                   "^F1000$" = "F1000Research",
                   "F1000research" = "F1000Research",
                   "F1000res" = "F1000Research",
                   "F1000 Research" = "F1000Research",
                   "Stat Appl Genet Mol Biol" = sagmb,
                   "Sagmb" = sagmb,
                   "Proceedings Of The National Academy of Sciences" = pnas,
                   "Proc Natl Acad Sci Usa" = pnas,
                   "Pnas" = pnas,
                   "Comput Biol" = "Computational Biology",
                   "Computat Biol" = "Computational Biology",
                   "Physiol Genomics" = "Physiological Genomics",
                   "Oxford " = "",
                   "Bioinformatics Journal" = "Bioinformatics",
                   " \\(.*\\)" = "",
                   "Nat Meth" = "Nature Methods",
                   "Nat Commun" = "Nature Communications",
                   "Nat Biotech" = "Nature Biotechnology",
                   "Nat Biotechnol" = "Nature Biotechnology",
                   "Nar Genomics And Bioinformatics" = "Nucleic Acids Research",
                   "Mol Cell Proteomics" = "Molecular & Cellular Proteomics",
                   "Methods Inf Med" = "Methods Of Information In Medicine",
                   "Jco.*" = "Journal Of Clinical Oncology",
                   "Jasa" = "Journal Of the American Statistical Association",
                   "J Proteomics" = "Journal Of Proteomics",
                   "J Comput Biol" = jcompbio,
                   "J Computational Biology" = jcompbio,
                   "J Mach Learn" = "Journal Of Machine Learning",
                   "Int J Mol Sci" = ijms,
                   "Comput Methods Programs Biomed" = cmpbiomed,
                   "Syst Biol" = "Systems Biology",
                   "Mol Systems Biology" = "Molecular Systems Biology",
                   "Algorithms Mol Biol" = "Algorithms For Molecular Biology"
                   ))
    )
    pcit <- mutate(pcit, Journal = stringr::str_trim(Journal))
    remove <- "Biorxiv|Arxiv|Doi|Preprint|Submitted|In Preparation|Error|Http"
    pcit <- dplyr::filter(pcit, 
                          !stringr::str_detect(Journal, remove))
    
    return(pcit)
}
```

Now, we can create the citation table.

```{r message=FALSE, warning=FALSE}
suppressPackageStartupMessages(library(tidyverse))

# List available Bioc packages
bioc_repo <- "https://www.bioconductor.org/packages/release/bioc"
bioc_pkgs <- available.packages(repos = bioc_repo)[, "Package"]
```

```{r citation_table}
# Scrape CITATION field from Bioc landing pages
citation_table <- create_citation_table(bioc_pkgs)

# Process journal names
citation_table <- process_titles(citation_table)
```


## Summary stats

Now, let's count the frequency of packages in each journal and show the top 20 journals based on highest article count.

```{r}
citation_stats <- citation_table %>%
    count(Journal) %>%
    arrange(-n) %>%
    slice_head(n = 20)

citation_stats
```

Exploring it visually:

```{r fig.width=9, fig.height=7}
bioc_logo <- png::readPNG(
    here::here("content", "blog", 
               "2022-01-03-bioc_publications", 
               "featured-bioc.png"), 
    native = TRUE)

last_updated <- format(Sys.Date(), "%Y-%m-%d")
xmax <- max(citation_stats$n) + 30
xmax <- round(xmax / 10) * 10

ggplot(citation_stats, aes(x = n, y = reorder(Journal, n))) +
    geom_col() +
    geom_text(aes(label = n), hjust = -0.3) +
    xlim(0, 300) +
    labs(title = "Where are papers associated with BioC packages published?",
         subtitle = paste0("Last updated: ", last_updated),
         x = "Number of papers", y = "") +
    theme_bw() +
    patchwork::inset_element(bioc_logo,
                             left = 0.5,
                             top = 0.55,
                             right = 0.95,
                             bottom = 0.3) +
    theme_void()
```

And voilà! In case you want to explore the whole table, here it is:

```{r echo=FALSE}
citation_table %>%
    count(Journal) %>%
    arrange(-n) %>%
    DT::datatable()
```

## Session information

```{r}
sessionInfo()
```